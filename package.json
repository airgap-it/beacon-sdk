{
  "name": "@airgap/beacon-sdk",
  "description": "The beacon-sdk allows you to easily connect DApps with Wallets through P2P communication or a chrome extension.",
  "main": "dist/cjs/index.js",
  "module": "dist/esm/index.js",
  "unpkg": "dist/walletbeacon.min.js",
  "types": "dist/esm/index.d.ts",
  "workspaces": [
    "packages/*"
  ],
  "keywords": [
    "airgap",
    "beacon",
    "crypto",
    "blockchain",
    "tezos",
    "decentralized",
    "dapp"
  ],
  "license": "MIT",
  "homepage": "https://www.airgap.it",
  "repository": {
    "type": "git",
    "url": "https://github.com/airgap-it/beacon-sdk"
  },
  "engines": {
    "npm": ">=7.0.0",
    "node": ">=16.0.0"
  },
  "scripts": {
    "prebuild": "ts-node --project tsconfig-cjs.json scripts/generate-wallet-list.ts",
    "build": "npm run check-version && lerna run tsc && npm run webpack:all",
    "webpack:all": "npm run webpack:sdk && npm run webpack:dapp && npm run webpack:wallet",
    "webpack:sdk": "webpack --mode=development --config webpack.config.js --entry=./packages/beacon-sdk/dist/cjs/index.js --output-path ./webpack_builds/sdk && terser --ecma=12 ./webpack_builds/sdk/main.js -o ./packages/beacon-sdk/dist/walletbeacon.min.js && cp ./packages/beacon-sdk/dist/walletbeacon.min.js ./examples/walletbeacon.min.js",
    "webpack:dapp": "webpack --mode=development --entry=./packages/beacon-dapp/dist/cjs/index.js --output-path ./webpack_builds/dapp && terser --ecma=12 ./webpack_builds/dapp/main.js -o ./packages/beacon-dapp/dist/walletbeacon.dapp.min.js",
    "webpack:wallet": "webpack --mode=development --entry=./packages/beacon-wallet/dist/cjs/index.js --output-path ./webpack_builds/wallet && terser --ecma=12 ./webpack_builds/wallet/main.js -o ./packages/beacon-wallet/dist/walletbeacon.wallet.min.js",
    "prettier": "prettier --write 'src/**/*' '**/src/**/*' 'docs/**/*.md' 'example-dapp.html' 'example-wallet.html'",
    "lint": "eslint 'src/**/*.ts'",
    "lint:fix": "eslint 'src/**/*.ts' --fix",
    "lint-ci": "eslint 'src/**/*.ts' -f json -o lintReport.json || true",
    "bootstrap": "lerna bootstrap",
    "test": "lerna run test --stream",
    "test-ci": "nyc --reporter=lcov npm test",
    "e2e": "ts-node --project tsconfig-node.json e2e/permission-request.ts",
    "e2e-prepare-ffmpeg": "ts-node --project tsconfig-node.json e2e/generate-ffmpeg-file.ts",
    "e2e-create-videos": "ffmpeg -f concat -i e2e/output/dapp/input.txt e2e/output/dapp/output.webm && ffmpeg -f concat -i e2e/output/wallet/input.txt e2e/output/wallet/output.webm",
    "e2e-combine-videos": "ffmpeg -i e2e/output/dapp/output.webm -i e2e/output/wallet/output.webm -filter_complex '[0]pad=iw+5:color=black[left];[left][1]hstack=inputs=2' e2e/output/combined.webm",
    "e2e:all": "npm run e2e && npm run e2e-prepare-ffmpeg && npm run e2e-create-videos && npm run e2e-combine-videos",
    "audit-ci": "npm audit --json > audit.json && node scripts/dependency-scanning.js",
    "sonar-scanner": "sonar-scanner",
    "prepare": "npm run build",
    "check-version": "ts-node --project tsconfig-cjs.json scripts/check-sdk-version.ts",
    "typedoc": "typedoc",
    "publish": "lerna run tsc && lerna publish",
    "bump:version": "lerna version --no-git-tag-version --exact",
    "bump:major": "lerna version --no-git-tag-version major --exact --yes",
    "bump:minor": "lerna version --no-git-tag-version minor --exact --yes",
    "bump:patch": "lerna version --no-git-tag-version patch --exact --yes",
    "bump:beta": "lerna version --no-git-tag-version prerelease --preid beta --exact --yes"
  },
  "author": "Papers AG <contact@papers.ch> (https://papers.ch)",
  "dependencies": {
    "@airgap/beacon-blockchain-substrate": "file:packages/beacon-blockchain-substrate",
    "@airgap/beacon-blockchain-tezos": "file:packages/beacon-blockchain-tezos",
    "@airgap/beacon-blockchain-tezos-sapling": "file:packages/beacon-blockchain-tezos-sapling",
    "@airgap/beacon-core": "file:packages/beacon-core",
    "@airgap/beacon-dapp": "file:packages/beacon-dapp",
    "@airgap/beacon-transport-matrix": "file:packages/beacon-transport-matrix",
    "@airgap/beacon-transport-postmessage": "file:packages/beacon-transport-postmessage",
    "@airgap/beacon-transport-walletconnect": "file:packages/beacon-transport-walletconnect",
    "@airgap/beacon-types": "file:packages/beacon-types",
    "@airgap/beacon-ui": "file:packages/beacon-ui",
    "@airgap/beacon-utils": "file:packages/beacon-utils",
    "@airgap/beacon-wallet": "file:packages/beacon-wallet",
    "@walletconnect/sign-client": "2.11.2",
    "@walletconnect/types": "2.11.2",
    "@walletconnect/utils": "2.11.2",
    "@web3modal/standalone": "2.0.0",
    "stream-browserify": "^3.0.0"
  },
  "devDependencies": {
    "@babel/cli": "^7.22.15",
    "@babel/core": "^7.22.17",
    "@babel/preset-env": "^7.22.15",
    "@types/bs58check": "2.1.0",
    "@types/chai-as-promised": "7.1.6",
    "@types/jest": "^29.5.4",
    "@types/mocha": "10.0.1",
    "@types/node": "20.6.0",
    "@types/sinon": "10.0.16",
    "@typescript-eslint/eslint-plugin": "6.7.0",
    "@typescript-eslint/eslint-plugin-tslint": "6.7.0",
    "@typescript-eslint/parser": "6.7.0",
    "axios-mock-adapter": "^1.22.0",
    "browserify": "17.0.0",
    "chai": "4.3.8",
    "chai-as-promised": "7.1.1",
    "eslint": "8.49.0",
    "eslint-config-prettier": "9.0.0",
    "eslint-plugin-import": "2.28.1",
    "eslint-plugin-no-null": "1.0.2",
    "eslint-plugin-prefer-arrow": "1.2.3",
    "husky": "8.0.3",
    "jsdom": "22.1.0",
    "jsdom-global": "3.0.2",
    "lerna": "7.3.0",
    "mocha": "10.2.0",
    "nyc": "15.1.0",
    "prettier": "3.0.3",
    "pretty-quick": "3.1.3",
    "puppeteer": "21.2.1",
    "puppeteer-mass-screenshots": "1.0.15",
    "resize-img": "2.0.0",
    "sinon": "16.0.0",
    "sonar-scanner": "3.1.0",
    "static-server": "2.2.1",
    "terser": "^5.19.4",
    "ts-node": "10.9.1",
    "tslint": "6.1.3",
    "typedoc": "0.25.1",
    "typedoc-plugin-internal-external": "2.2.0",
    "typescript": "5.2.2",
    "uglify-js": "3.17.4",
    "webpack": "^5.88.2",
    "webpack-cli": "^5.1.4"
  },
  "files": [
    "/dist"
  ],
  "nyc": {
    "include": [
      "src/**/*.ts"
    ],
    "exclude": [
      "test/**/*.spec.ts"
    ],
    "extension": [
      ".ts"
    ],
    "require": [
      "ts-node/register"
    ],
    "reporter": [
      "text",
      "text-summary"
    ],
    "sourceMap": true,
    "instrument": true
  },
  "husky": {
    "hooks": {
      "pre-commit": "npm run check-version && pretty-quick --staged"
    }
  }
}
