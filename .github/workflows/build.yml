name: Build, Test and Analyze

on: push

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Node 18
        uses: actions/setup-node@v1
        with:
          node-version: 18.x

      - name: Prepare
        run: npm ci

      - name: Build
        run: npm run build

      - name: Test
        run: npm run test

      # ───────────────────────────────────────────────────────────────────────────────
      # ▼ BEGIN E2E STEPS ▼
      # ───────────────────────────────────────────────────────────────────────────────

      # 1. Install Playwright’s browsers + required Linux deps.
      - name: Install Playwright browsers & system dependencies
        run: npx playwright install --with-deps

      # 2. Install http-server globally so “npx http-server” inside each spec
      #    no longer tries to download on the fly.
      - name: Install http-server (globally)
        run: npm install -g http-server

      # 3. Run each *.spec.ts under e2e/ one at a time (serially), wrapped in Xvfb.
      #    After each file, kill any http-server processes before moving on.
      - name: Run E2E tests with retries
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 20
          max_attempts: 3
          retry_wait_seconds: 60
          shell: bash
          command: npm run e2e

      # ───────────────────────────────────────────────────────────────────────────────
      # ▼  END E2E STEPS  ▼
      # ───────────────────────────────────────────────────────────────────────────────

      # - name: Upload
      #   uses: actions/upload-artifact@v1
      #   with:
      #     name: video
      #     path: e2e/output/combined.webm

      # - name: Analyze with SonarCloud
      #   uses: sonarsource/sonarcloud-github-action@master
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
